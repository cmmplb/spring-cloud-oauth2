<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <!-- 指定当前POM模型的版本 -->
    <modelVersion>4.0.0</modelVersion>
    <!-- 项目ID，项目坐标核心元素，项目组织唯一的标识符，实际对应JAVA的包的结构，是main目录里java的目录结构。 -->
    <groupId>com.cmmplb</groupId>
    <!-- 项目的唯一的标识符，实际对应项目的名称，就是项目根目录的名称。 -->
    <artifactId>spring-cloud-oauth2</artifactId>
    <!-- 项目版本 -->
    <version>1.0.0</version>
    <!-- 项目的打包类型：pom、jar、war -->
    <packaging>pom</packaging>
    <!-- 项目名称 -->
    <name>${project.artifactId}</name>
    <!-- 描述信息 -->
    <description>服务注册中心</description>

    <!-- 子模块 -->
    <modules>
        <module>spring-cloud-oauth2-auth-server</module>
        <module>spring-cloud-oauth2-eureka-server</module>
        <module>spring-cloud-oauth2-gateway-server</module>
        <module>spring-cloud-oauth2-resource-server</module>
        <module>spring-cloud-oauth2-system-server</module>
    </modules>

    <!-- 版本依赖定义 -->
    <properties>
        <!-- 版本依赖 -->
        <spring-boot-dependencies.version>2.5.3</spring-boot-dependencies.version>
        <spring-cloud-dependencies.version>2020.0.4</spring-cloud-dependencies.version>

        <!-- Encoding-解决编译控制台警告 -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <!-- 插件依赖 -->
        <maven-compiler-plugin.version>3.8.0</maven-compiler-plugin.version>

        <!-- 基础依赖 -->
        <fastjson.version>1.2.76</fastjson.version>
        <mybatis-plus-boot-starter.version>3.4.3.1</mybatis-plus-boot-starter.version>

        <!-- 服务端口号, 避免端口号冲突而去挨个修改每个配置，这里统一定义引用，到时候冲突的话改这一个地方就可以了 -->
        <eureka.server.port>8761</eureka.server.port>
        <gateway-server.port>10000</gateway-server.port>
        <auth.server.port>20000</auth.server.port>
        <system.server.port>30000</system.server.port>

        <!-- 连接配置 -->
        <mysql.url>localhost:3306/spring_cloud_oauth2</mysql.url>
        <mysql.username>root</mysql.username>
        <mysql.password>cmmplb</mysql.password>

        <redis.host>localhost</redis.host>
        <redis.password>cmmplb</redis.password>
        <redis.port>6379</redis.port>
    </properties>

    <!-- 父工程依赖, 子模块都会继承 -->
    <dependencies>
        <!-- bootstrap启动器, 里面的spring-cloud-commons包使用bootstrap.yml -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-bootstrap</artifactId>
        </dependency>
    </dependencies>

    <!-- 依赖管理 -->
    <dependencyManagement>
        <dependencies>
            <!-- SpringBoot -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot-dependencies.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- SpringCloud -->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud-dependencies.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- 资源服务模块 -->
            <dependency>
                <groupId>com.cmmplb</groupId>
                <artifactId>spring-cloud-oauth2-resource-server</artifactId>
                <version>${project.version}</version>
            </dependency>
            <!-- fastjson -->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>fastjson</artifactId>
                <version>${fastjson.version}</version>
            </dependency>
            <!-- mybatis-plus -->
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-boot-starter</artifactId>
                <version>${mybatis-plus-boot-starter.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <!-- 编译配置 -->
    <build>
        <!-- 默认情况下，Maven会从项目的src/main/resources目录下查找资源, 让yml能引用maven变量@xxx@, 例如@project.artifactId@ -->
        <resources>
            <!-- java -->
            <resource>
                <!-- 指定资源目录包含的文件 -->
                <directory>src/main/resources</directory>
                <!-- 替换目录下${}解析的变量, 用于配置文件引用一些变量，例如端口号: ${server.port} -->
                <filtering>true</filtering>
            </resource>
        </resources>

        <!-- 插件管理 -->
        <pluginManagement>
            <plugins>
                <!-- maven-compiler-plugin编译Java文件时使用什么版本的jre -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven-compiler-plugin.version}</version>
                    <configuration>
                        <!-- 源代码使用的JDK版本 -->
                        <source>1.8</source>
                        <!-- 需要生成的目标class文件的编译版本 -->
                        <target>1.8</target>
                        <!-- 字符集编码 -->
                        <encoding>UTF-8</encoding>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
</project>